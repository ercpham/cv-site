[{"/home/ericp/WebDev/cv-site/client/src/index.js":"1","/home/ericp/WebDev/cv-site/client/src/App.js":"2","/home/ericp/WebDev/cv-site/client/src/components/NavBar.js":"3","/home/ericp/WebDev/cv-site/client/src/components/Home.js":"4","/home/ericp/WebDev/cv-site/client/src/components/Contact.js":"5","/home/ericp/WebDev/cv-site/client/src/components/Projects.js":"6","/home/ericp/WebDev/cv-site/client/src/misc/reportWebVitals.js":"7","/home/ericp/WebDev/cv-site/client/src/components/About.js":"8"},{"size":520,"mtime":1611451937726,"results":"9","hashOfConfig":"10"},{"size":2082,"mtime":1611459341733,"results":"11","hashOfConfig":"10"},{"size":1745,"mtime":1611458405306,"results":"12","hashOfConfig":"10"},{"size":897,"mtime":1611366372137,"results":"13","hashOfConfig":"10"},{"size":264,"mtime":1608702267285,"results":"14","hashOfConfig":"10"},{"size":1634,"mtime":1611637513280,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1611451157021,"results":"16","hashOfConfig":"10"},{"size":100,"mtime":1611452506309,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1s1pzgm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/ericp/WebDev/cv-site/client/src/index.js",[],["37","38"],"/home/ericp/WebDev/cv-site/client/src/App.js",["39","40","41","42","43"],"import React, { useState, useEffect } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./css/App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport Projects from \"./components/Projects\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [response, setResponse] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [responseToPost, setResponseToPost] = useState(\"\");\n  const items = [\"Home\", \"About Me\", \"Projects\", \"Contact\"];\n\n  useEffect(() => {\n    callApi()\n      .then((res) => setResponse(res.express))\n      .catch((err) => console.log(err));\n  });\n\n  const callApi = async () => {\n    const response = await fetch(\"/api/hello\");\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"/api/world\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ post: post }),\n    });\n    const body = await response.text();\n\n    setResponseToPost(body);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar items={items} />\n        <div className=\"content\">\n          <TransitionGroup>\n            <CSSTransition classNames=\"fade\" timeout={300}>\n              <Switch>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/projects\">\n                  <Projects />\n                </Route>\n                <Route path=\"/contact\">\n                  <Contact />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/ericp/WebDev/cv-site/client/src/components/NavBar.js",["44","45","46"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  const [homeSelected, setHomeSelected] = useState(\"\");\n  const [aboutSelected, setAboutSelected] = useState(\"\");\n  const [projectsSelected, setProjectsSelected] = useState(\"\");\n  const [contactSelected, setContactSelected] = useState(\"\");\n\n  const select = (number) => {\n    setHomeSelected(\"\");\n    setAboutSelected(\"\");\n    setProjectsSelected(\"\");\n    setContactSelected(\"\");\n    localStorage.setItem(\"tabselected\", number);\n    switch (number) {\n      case 1:\n        setHomeSelected(\"selected\");\n        break;\n      case 2:\n        setAboutSelected(\"selected\");\n        break;\n      case 3:\n        setProjectsSelected(\"selected\");\n        break;\n      case 4:\n        setContactSelected(\"selected\");\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    let selectedTab = localStorage.getItem(\"tabselected\") || 1;\n    select(selectedTab);\n  }, []);\n\n  return (\n    <div className=\"NavBar\">\n      <div>\n        <Link to=\"/\" className={homeSelected} onClick={() => select(1)}>\n          Home\n        </Link>\n      </div>\n      <div>\n        <Link to=\"/about\" className={aboutSelected} onClick={() => select(2)}>\n          About\n        </Link>\n      </div>\n      <div>\n        <Link\n          to=\"/projects\"\n          className={projectsSelected}\n          onClick={() => select(3)}\n        >\n          Projects\n        </Link>\n      </div>\n      <div>\n        <Link\n          to=\"/contact\"\n          className={contactSelected}\n          onClick={() => select(4)}\n        >\n          Contact\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/home/ericp/WebDev/cv-site/client/src/components/Home.js",[],"/home/ericp/WebDev/cv-site/client/src/components/Contact.js",[],"/home/ericp/WebDev/cv-site/client/src/components/Projects.js",[],"/home/ericp/WebDev/cv-site/client/src/misc/reportWebVitals.js",[],"/home/ericp/WebDev/cv-site/client/src/components/About.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":50,"nodeType":"53","messageId":"54","endLine":3,"endColumn":54},{"ruleId":"51","severity":1,"message":"55","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":18},{"ruleId":"51","severity":1,"message":"56","line":13,"column":16,"nodeType":"53","messageId":"54","endLine":13,"endColumn":23},{"ruleId":"51","severity":1,"message":"57","line":14,"column":10,"nodeType":"53","messageId":"54","endLine":14,"endColumn":24},{"ruleId":"51","severity":1,"message":"58","line":31,"column":9,"nodeType":"53","messageId":"54","endLine":31,"endColumn":21},{"ruleId":"51","severity":1,"message":"59","line":2,"column":27,"nodeType":"53","messageId":"54","endLine":2,"endColumn":33},{"ruleId":"51","severity":1,"message":"60","line":2,"column":35,"nodeType":"53","messageId":"54","endLine":2,"endColumn":41},{"ruleId":"51","severity":1,"message":"61","line":2,"column":43,"nodeType":"53","messageId":"54","endLine":2,"endColumn":48},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'setPost' is assigned a value but never used.","'responseToPost' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]